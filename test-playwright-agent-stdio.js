/**
 * PlaywrightAgent StdioÁµ±Âêà„ÉÜ„Çπ„Éà
 * 
 * PlaywrightAgent„ÅåStdioÈÄö‰ø°„ÅßÊ≠£Â∏∏„Å´Âãï‰Ωú„Åô„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
 */

const PlaywrightAgent = require('./src/playwright-agent');

async function main() {
  console.log('=== PlaywrightAgent StdioÁµ±Âêà„ÉÜ„Çπ„ÉàÈñãÂßã ===\n');

  // „É¢„ÉÉ„ÇØË®≠ÂÆö„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Çí‰ΩúÊàê
  const mockConfig = {
    config: {
      default_browser: 'chromium',
      timeout_seconds: 300,
      playwright_agent: {
        mock_mode: false  // ÂÆüÈöõ„ÅÆMCPÈÄö‰ø°„Çí‰ΩøÁî®
      }
    }
  };

  // PlaywrightAgent„Çí‰ΩúÊàêÔºàmockMode = false „ÅßÂÆüÈöõ„ÅÆMCPÈÄö‰ø°Ôºâ
  const agent = new PlaywrightAgent(mockConfig, { mockMode: false });

  try {
    // „Çπ„ÉÜ„ÉÉ„Éó 1: „Çª„ÉÉ„Ç∑„Éß„É≥ÂàùÊúüÂåñ
    console.log('üì° Step 1: Initializing session...');
    await agent.initializeSession();
    console.log('‚úÖ Session initialized\n');

    // „Çπ„ÉÜ„ÉÉ„Éó 2: „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥
    console.log('üåê Step 2: Navigating to Google...');
    const navResult = await agent.executeInstruction({
      type: 'navigate',
      url: 'https://www.google.com',
      description: 'Navigate to Google'
    });
    console.log('‚úÖ Navigation result:', navResult.success ? 'Success' : 'Failed');
    if (navResult.error) {
      console.error('   Error:', navResult.error);
    }
    if (navResult.details) {
      console.log('   Details:', JSON.stringify(navResult.details, null, 2).substring(0, 200));
    }
    console.log();

    // „Çπ„ÉÜ„ÉÉ„Éó 3: „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà
    console.log('üì∑ Step 3: Taking screenshot...');
    const screenshotResult = await agent.executeInstruction({
      type: 'screenshot',
      path: 'test-agent-google.png',
      description: 'Take screenshot of Google homepage'
    });
    console.log('‚úÖ Screenshot result:', screenshotResult.success ? 'Success' : 'Failed');
    if (screenshotResult.error) {
      console.error('   Error:', screenshotResult.error);
    }
    console.log();

    // „Çπ„ÉÜ„ÉÉ„Éó 4: Âà•„ÅÆ„Éö„Éº„Ç∏„Å∏„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Ôºà„Éñ„É©„Ç¶„Ç∂ÂÜçÂà©Áî®Á¢∫Ë™çÔºâ
    console.log('üåê Step 4: Navigating to GitHub...');
    const navResult2 = await agent.executeInstruction({
      type: 'navigate',
      url: 'https://github.com',
      description: 'Navigate to GitHub'
    });
    console.log('‚úÖ Navigation result:', navResult2.success ? 'Success (Browser reused!)' : 'Failed');
    if (navResult2.error) {
      console.error('   Error:', navResult2.error);
    }
    console.log();

    // „Çπ„ÉÜ„ÉÉ„Éó 5: 2ÂõûÁõÆ„ÅÆ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà
    console.log('üì∑ Step 5: Taking another screenshot...');
    const screenshotResult2 = await agent.executeInstruction({
      type: 'screenshot',
      path: 'test-agent-github.png',
      description: 'Take screenshot of GitHub homepage'
    });
    console.log('‚úÖ Screenshot result:', screenshotResult2.success ? 'Success' : 'Failed');
    if (screenshotResult2.error) {
      console.error('   Error:', screenshotResult2.error);
    }
    console.log();

    // ÁµêÊûú„Çµ„Éû„É™„Éº
    console.log('='.repeat(60));
    console.log('üéâ PlaywrightAgent StdioÁµ±Âêà„ÉÜ„Çπ„ÉàÂÆå‰∫ÜÔºÅ');
    console.log('='.repeat(60));
    
    const allSuccess = 
      navResult.success && 
      screenshotResult.success && 
      navResult2.success && 
      screenshotResult2.success;
    
    if (allSuccess) {
      console.log('‚úÖ ÂÖ®„ÉÜ„Çπ„ÉàÊàêÂäüÔºÅ');
      console.log('‚úÖ PlaywrightAgent„ÅåStdioÈÄö‰ø°„ÅßÊ≠£Â∏∏Âãï‰Ωú„ÇíÁ¢∫Ë™ç');
      console.log('‚úÖ „Éñ„É©„Ç¶„Ç∂„Ç§„É≥„Çπ„Çø„É≥„Çπ„Åå‰øùÊåÅ„Åï„Çå„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç');
      console.log('‚úÖ Ë§áÊï∞„ÅÆÊåáÁ§∫„ÇíÈÄ£Á∂öÂÆüË°å„Åß„Åç„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç');
    } else {
      console.log('‚ö†Ô∏è  ‰∏ÄÈÉ®„ÅÆ„ÉÜ„Çπ„Éà„ÅåÂ§±Êïó„Åó„Åæ„Åó„Åü');
    }

  } catch (error) {
    console.error('\n‚ùå „Ç®„É©„Éº:', error.message);
    console.error('Stack:', error.stack);
    process.exit(1);
  } finally {
    // „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
    console.log('\nüßπ Closing session...');
    await agent.closeSession();
    console.log('‚úÖ Session closed');
  }
}

// ÂÆüË°å
main().then(() => {
  console.log('\n=== PlaywrightAgent StdioÁµ±Âêà„ÉÜ„Çπ„ÉàÁµÇ‰∫Ü ===');
  process.exit(0);
}).catch(error => {
  console.error('\n‚ùå Fatal error:', error);
  process.exit(1);
});
