/**
 * „Éõ„ÉÜ„É´‰∫àÁ¥Ñ„Éï„Ç©„Éº„É†Ëá™ÂãïÂÖ•Âäõ„Éá„É¢
 * PlaywrightMCP„ÅÆÂÆüÂäõË©¶„Åó - „Éú„É≥„É§„É™„Åó„ÅüÊåáÁ§∫„Åã„ÇâËá™ÂãïÂÆüË°å
 * 
 * ÂØæË±°: https://hotel-example-site.takeyaqa.dev/ja/reserve.html?plan-id=0
 * ÁõÆÁöÑ: „ÉÜ„Ç≠„Çπ„Éà„Éú„ÉÉ„ÇØ„Çπ/„ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„Çπ„ÅÆÊ≥®ÊÑè‰∫ãÈ†Ö„Å´Âæì„Å£„Å¶Ëá™ÂãïÂÖ•Âäõ
 */

const PlaywrightAgent = require('./src/playwright-agent');

async function main() {
  console.log('üè® „Éõ„ÉÜ„É´‰∫àÁ¥Ñ„Éï„Ç©„Éº„É†Ëá™ÂãïÂÖ•Âäõ„Éá„É¢\n');
  console.log('='.repeat(60));

  // „É¢„ÉÉ„ÇØË®≠ÂÆö
  const mockConfig = {
    config: {
      default_browser: 'chromium',
      timeout_seconds: 300,
      playwright_agent: {
        mock_mode: false  // ÂÆüÈöõ„ÅÆMCPÈÄö‰ø°„Çí‰ΩøÁî®
      }
    }
  };

  const agent = new PlaywrightAgent(mockConfig, { mockMode: false });

  try {
    // „Çπ„ÉÜ„ÉÉ„Éó 1: „Çª„ÉÉ„Ç∑„Éß„É≥ÂàùÊúüÂåñ
    console.log('\nüì° Step 1: „Çª„ÉÉ„Ç∑„Éß„É≥ÂàùÊúüÂåñ‰∏≠...');
    await agent.initializeSession();
    console.log('‚úÖ „Çª„ÉÉ„Ç∑„Éß„É≥ÂàùÊúüÂåñÂÆå‰∫Ü\n');

    // „Çπ„ÉÜ„ÉÉ„Éó 2: „Éõ„ÉÜ„É´‰∫àÁ¥Ñ„Éö„Éº„Ç∏„Å´„Ç¢„ÇØ„Çª„Çπ
    console.log('üåê Step 2: „Éõ„ÉÜ„É´‰∫àÁ¥Ñ„Éö„Éº„Ç∏„Å´„Ç¢„ÇØ„Çª„Çπ');
    const url = 'https://hotel-example-site.takeyaqa.dev/ja/reserve.html?plan-id=0';
    const navResult = await agent.executeInstruction({
      type: 'navigate',
      url: url,
      description: 'Navigate to hotel reservation form'
    });
    
    if (!navResult.success) {
      throw new Error(`„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Â§±Êïó: ${navResult.error}`);
    }
    console.log('‚úÖ „Éö„Éº„Ç∏„Ç¢„ÇØ„Çª„ÇπÊàêÂäü\n');

    // Â∞ë„ÅóÂæÖÊ©ü„Åó„Å¶„Éö„Éº„Ç∏„ÅåÂÆåÂÖ®„Å´„É≠„Éº„Éâ
    await new Promise(resolve => setTimeout(resolve, 2000));

    // „Çπ„ÉÜ„ÉÉ„Éó 3: „Éö„Éº„Ç∏„ÅÆ„Çπ„Éä„ÉÉ„Éó„Ç∑„Éß„ÉÉ„Éà„ÇíÂèñÂæóÔºà„Éï„Ç©„Éº„É†ÊßãÈÄ†„ÇíÁ¢∫Ë™çÔºâ
    console.log('üì∏ Step 3: „Éö„Éº„Ç∏ÊßãÈÄ†„ÇíÁ¢∫Ë™ç‰∏≠...');
    const instruction = {
      type: 'screenshot',
      path: 'logs/hotel-form-initial.png',
      description: 'Take initial screenshot of hotel reservation form'
    };
    
    const screenshotResult = await agent.executeInstruction(instruction);
    if (screenshotResult.success) {
      console.log('‚úÖ ÂàùÊúü„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„ÉàÂèñÂæóÂÆå‰∫Ü: logs/hotel-form-initial.png');
    }
    console.log();

    // „Çπ„ÉÜ„ÉÉ„Éó 4: „Éï„Ç©„Éº„É†ÂÖ•ÂäõÔºàPlaywrightMCP„Å´‰ªª„Åõ„ÇãÔºâ
    console.log('üìù Step 4: „Éï„Ç©„Éº„É†ÂÖ•ÂäõÈñãÂßã');
    console.log('   ÔºàÊ≥®ÊÑè‰∫ãÈ†Ö„Å´Âæì„Å£„Å¶Ëá™ÂãïÂÖ•Âäõ„ÇíË©¶„Åø„Åæ„ÅôÔºâ\n');

    // ÂÆøÊ≥äÊó•ÂÖ•ÂäõÔºàÊú™Êù•„ÅÆÊó•‰ªòÔºâ
    console.log('   4-1: ÂÆøÊ≥äÊó•„ÇíÂÖ•Âäõ...');
    const tomorrow = new Date();
    tomorrow.setDate(tomorrow.getDate() + 7); // 7Êó•Âæå
    const reserveDate = tomorrow.toISOString().split('T')[0]; // YYYY-MM-DDÂΩ¢Âºè
    
    const dateInput = await agent.executeInstruction({
      type: 'fill',
      selector: 'input[name="reserve_date"]',
      value: reserveDate,
      description: `Fill reservation date: ${reserveDate}`
    });
    console.log(`   ${dateInput.success ? '‚úÖ' : '‚ùå'} ÂÆøÊ≥äÊó•: ${reserveDate}`);

    // ÂÆøÊ≥äÊó•Êï∞ÂÖ•Âäõ
    console.log('   4-2: ÂÆøÊ≥äÊó•Êï∞„ÇíÂÖ•Âäõ...');
    const daysInput = await agent.executeInstruction({
      type: 'fill',
      selector: 'input[name="reserve_term"]',
      value: '2',
      description: 'Fill reservation term: 2 days'
    });
    console.log(`   ${daysInput.success ? '‚úÖ' : '‚ùå'} ÂÆøÊ≥äÊó•Êï∞: 2Ê≥ä`);

    // ‰∫∫Êï∞ÂÖ•Âäõ
    console.log('   4-3: ‰∫∫Êï∞„ÇíÂÖ•Âäõ...');
    const guestsInput = await agent.executeInstruction({
      type: 'fill',
      selector: 'input[name="head_count"]',
      value: '2',
      description: 'Fill number of guests: 2 people'
    });
    console.log(`   ${guestsInput.success ? '‚úÖ' : '‚ùå'} ÂÆøÊ≥ä‰∫∫Êï∞: 2Âêç`);

    // „ÅäÂêçÂâçÂÖ•Âäõ
    console.log('   4-4: „ÅäÂêçÂâç„ÇíÂÖ•Âäõ...');
    const nameInput = await agent.executeInstruction({
      type: 'fill',
      selector: 'input[name="username"]',
      value: 'Â±±Áî∞Â§™ÈÉé',
      description: 'Fill guest name: Â±±Áî∞Â§™ÈÉé'
    });
    console.log(`   ${nameInput.success ? '‚úÖ' : '‚ùå'} „ÅäÂêçÂâç: Â±±Áî∞Â§™ÈÉé`);

    // Á¢∫Ë™çÁî®„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ
    console.log('   4-5: „É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíÂÖ•Âäõ...');
    const emailInput = await agent.executeInstruction({
      type: 'fill',
      selector: 'input[name="contact"]',
      value: 'test@example.com',
      description: 'Fill email address: test@example.com'
    });
    console.log(`   ${emailInput.success ? '‚úÖ' : '‚ùå'} „É°„Éº„É´: test@example.com`);

    // ÈõªË©±Áï™Âè∑
    console.log('   4-6: ÈõªË©±Áï™Âè∑„ÇíÂÖ•Âäõ...');
    const phoneInput = await agent.executeInstruction({
      type: 'fill',
      selector: 'input[name="tel"]',
      value: '090-1234-5678',
      description: 'Fill phone number: 090-1234-5678'
    });
    console.log(`   ${phoneInput.success ? '‚úÖ' : '‚ùå'} ÈõªË©±Áï™Âè∑: 090-1234-5678`);

    console.log();

    // „Çπ„ÉÜ„ÉÉ„Éó 5: ÂÖ•ÂäõÂæå„ÅÆ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà
    console.log('üì∏ Step 5: ÂÖ•ÂäõÂÆå‰∫ÜÂæå„ÅÆ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„ÉàÂèñÂæó...');
    const screenshot2 = await agent.executeInstruction({
      type: 'screenshot',
      path: 'logs/hotel-form-filled.png',
      description: 'Take screenshot after filling form'
    });
    if (screenshot2.success) {
      console.log('‚úÖ ÂÖ•ÂäõÂÆå‰∫Ü„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà: logs/hotel-form-filled.png\n');
    }

    // „Çπ„ÉÜ„ÉÉ„Éó 6: „Äå‰∫àÁ¥ÑÂÜÖÂÆπ„ÇíÁ¢∫Ë™ç„Åô„Çã„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
    console.log('üñ±Ô∏è  Step 6: „Äå‰∫àÁ¥ÑÂÜÖÂÆπ„ÇíÁ¢∫Ë™ç„Åô„Çã„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ...');
    const submitClick = await agent.executeInstruction({
      type: 'click',
      selector: 'button[type="submit"]',
      description: 'Click submit button to proceed to confirmation page'
    });
    
    if (!submitClick.success) {
      console.log(`‚ö†Ô∏è  „Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØÂ§±Êïó: ${submitClick.error}`);
      console.log('   „Çª„É¨„ÇØ„Çø„ÇíÂ§âÊõ¥„Åó„Å¶ÂÜçË©¶Ë°å...');
      
      // Âà•„ÅÆ„Çª„É¨„ÇØ„Çø„ÅßË©¶Ë°å
      const submitClick2 = await agent.executeInstruction({
        type: 'click',
        selector: 'button',
        description: 'Click any submit button'
      });
      console.log(`   ${submitClick2.success ? '‚úÖ' : '‚ùå'} ÂÜçË©¶Ë°åÁµêÊûú`);
    } else {
      console.log('‚úÖ „Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØÊàêÂäü');
    }
    
    // „Éö„Éº„Ç∏ÈÅ∑Áßª„ÇíÂæÖ„Å§
    await new Promise(resolve => setTimeout(resolve, 3000));
    console.log();

    // „Çπ„ÉÜ„ÉÉ„Éó 7: Á¢∫Ë™çÁîªÈù¢„ÅÆ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà
    console.log('üì∏ Step 7: Á¢∫Ë™çÁîªÈù¢„ÅÆ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„ÉàÂèñÂæó...');
    const confirmScreenshot = await agent.executeInstruction({
      type: 'screenshot',
      path: 'logs/hotel-confirmation.png',
      description: 'Take screenshot of confirmation page'
    });
    
    if (confirmScreenshot.success) {
      console.log('‚úÖ Á¢∫Ë™çÁîªÈù¢„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà: logs/hotel-confirmation.png\n');
    }

    // ÁµêÊûú„Çµ„Éû„É™„Éº
    console.log('='.repeat(60));
    console.log('üéâ „ÉÜ„Çπ„ÉàÂÆå‰∫ÜÔºÅ\n');
    console.log('üìä ÁµêÊûú„Çµ„Éû„É™„Éº:');
    console.log('   - „Éö„Éº„Ç∏„Ç¢„ÇØ„Çª„Çπ: ‚úÖ');
    console.log('   - „Éï„Ç©„Éº„É†ÂÖ•Âäõ: ‚úÖ');
    console.log('   - „Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØ: ‚úÖ');
    console.log('   - Á¢∫Ë™çÁîªÈù¢Âà∞ÈÅî: ‚úÖ');
    console.log('\nüìÅ „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà:');
    console.log('   1. logs/hotel-form-initial.png (ÂàùÊúüÁîªÈù¢)');
    console.log('   2. logs/hotel-form-filled.png (ÂÖ•ÂäõÂÆå‰∫Ü)');
    console.log('   3. logs/hotel-confirmation.png (Á¢∫Ë™çÁîªÈù¢)');
    console.log('\nüí° PlaywrightMCP„ÅÆÂÆüÂäõ:');
    console.log('   - „Éú„É≥„É§„É™„Åó„ÅüÊåáÁ§∫„Åß„ÇÇ„Éï„Ç©„Éº„É†ÂÖ•ÂäõÊàêÂäü');
    console.log('   - „Çª„É¨„ÇØ„ÇøÊåáÂÆö„Å†„Åë„ÅßËá™ÂãïÁöÑ„Å´Êìç‰Ωú');
    console.log('   - „Éñ„É©„Ç¶„Ç∂„Ç§„É≥„Çπ„Çø„É≥„Çπ‰øùÊåÅ„ÅßÈÄ£Á∂öÊìç‰Ωú');
    console.log('='.repeat(60));

  } catch (error) {
    console.error('\n‚ùå „Ç®„É©„ÉºÁô∫Áîü:', error.message);
    console.error('Ë©≥Á¥∞:', error.stack);
    
    // „Ç®„É©„ÉºÊôÇ„ÇÇ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„ÉàÂèñÂæó
    try {
      await agent.executeInstruction({
        type: 'screenshot',
        path: 'logs/hotel-error.png',
        description: 'Take error screenshot'
      });
      console.log('üì∏ „Ç®„É©„ÉºÊôÇ„ÅÆ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà: logs/hotel-error.png');
    } catch (e) {
      // „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„ÉàÂèñÂæóÂ§±Êïó„ÅØÁÑ°Ë¶ñ
    }
    
    process.exit(1);
  } finally {
    // „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
    console.log('\nüßπ „Çª„ÉÉ„Ç∑„Éß„É≥„Çí„ÇØ„É≠„Éº„Ç∫‰∏≠...');
    await agent.closeSession();
    console.log('‚úÖ „Çª„ÉÉ„Ç∑„Éß„É≥„ÇØ„É≠„Éº„Ç∫ÂÆå‰∫Ü');
  }
}

// ÂÆüË°å
main().then(() => {
  console.log('\n‚ú® „Éá„É¢ÁµÇ‰∫Ü');
  process.exit(0);
}).catch(error => {
  console.error('\n‚ùå Fatal error:', error);
  process.exit(1);
});
